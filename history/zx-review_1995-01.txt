┌┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┐ ┌┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┐
│                                 ┤ │    Схема интерфейса мыши показана ┤
│         KEMPSTON-MOUSE          ┤ │ на следующей странице. Микросхема ┤
│ ─────────────────────────────── ┤ │ D1-D4,  D7, оптопары и дискретные ┤
│  (С) М.Свечков (схема),         ┤ │ элементы  входят  в  состав   "ММ ┤
│      К.Мехедов (программа),     ┤ │ 8031".  D5,  D6,  D8  - это новые ┤
│              респ. Крым, 1995.  ┤ │ элементы,  которые   подключаются ┤
└─────────────────────────────────┘ │ навесным   монтажом  к  имеющейся ┤
┌┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┘ плате и располагаются внутри кор- ┤
│    За рубежом   наибольшее  расп-   пуса   мыши.   Нумерация  выводов ┤
│ ространение  получили  мыши  двух   разъема - для вилки РП15-9Ш.  Ли- ┤
│ типов:  AMX и KEMPSTON.  Нам уда-   нии  PD0-PD4 подключаются к порту ┤
│ лось   эмулировать    конструкцию   с адресом 223 DEC (#DF).  В край- ┤
│ KEMPSTON-MOUSE, опираясь на рабо-   нем   случае  можно  использовать ┤
│ ту драйвера мыши из программы AR-   порт KEMPSTON-джойстика (#1F), но ┤
│ TIST-2.                             тогда  при  работе с программами, ┤
│                                     которые     управляются     KEMP- ┤
│    Предлагаемое устройство собра-   STON-джойстиком,  мышь надо будет ┤
│ но на базе "МАНИПУЛЯТОРа ММ 8031"   отключать.  Чтобы отключение про- ┤
│ для компьютера "КОРВЕТ".  В край-   исходило  безболезненно,  сигналы ┤
│ нем случае, можно взять мышь пас-   A8,  A10 лучше снимать не прямо с ┤
│ сивного типа,  имеющую только оп-   шины адреса,  а через буфер. Мик- ┤
│ топары и триггеры Шмитта (D1),  а   росхема К555КП14 (D8) использует- ┤
│ остальную схему собрать отдельно.   ся в случае, если порт инвертиру- ┤
└───────────────────────────────────────────────────────────────────────┘

                                 - 37 -

┌┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┐
│                   Ч И Т А Т Е Л Ь - Ч И Т А Т Е Л Ю                   ┤
└───────────────────────────────────────────────────────────────────────┘
┌┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┐
│                                                                       ┤
│                                                                       ┤
│                                                                       ┤
│                                                                       ┤
│                                                                       ┤
│                                                                       ┤
│                                                                       ┤
│                                                                       ┤
│                                                                       ┤
│                                                                       ┤
│                                                                       ┤
│                                                                       ┤
│                                                                       ┤
│                                                                       ┤
│                                                                       ┤
│                                                                       ┤
│                                                                       ┤
│                                                                       ┤
│                                                                       ┤
│                                                                       ┤
│                                                                       ┤
│                                                                       ┤
│                                                                       ┤
│                                                                       ┤
│                                                                       ┤
│                                                                       ┤
│                                                                       ┤
│                                                                       ┤
│                                                                       ┤
│                                                                       ┤
│                                                                       ┤
│ ет принимаемый    сигнал   (KEMP-      А10=0 -  порт  Х  (счетчик D3, ┤
│ STON-порт в 1-м "Ленинграде").  В   триггер D5.1);                    ┤
│ противном  случае  она заменяется      А10=1 - порт Y (D4, D5.2 соот- ┤
│ на К555КП11 (или К555КП16),  узел   ветственно).                      ┤
│ инвертора  на  D2.4 исключается и      Как иллюстрация   предлагается ┤
│ сигнал на PD4 идет прямо с вывода   драйвер для   обслуживания  KEMP- ┤
│ 4 микросхемы D6.                    STON-MOUSE. Он представляет собой ┤
│    Программно мышь   опрашивается   своеобразный гибрид:   работая  с ┤
│ по трем портам:                     мышью, выдает  информацию  анало- ┤
│    1. 64229 (#FADF) - кнопки.       гично джойстику  -  какие  кнопки ┤
│    2. 64479 (#FBDF) - коорд. Х.     нажаты и в какую сторону произво- ┤
│    3. 65503 (#FFDF) - коорд. Y.     дится движение.   Вычислением  же ┤
│                                     текущих координат курсора  должна ┤
│    Для схемы младший байт (#DF) -   заниматься вызывающая  программа. ┤
│ это уже упомянутый адрес порта, а   При вызове этого драйвера  компь- ┤
│ старший  определяет снимаемую ин-   ютер зацикливается  до  тех  пор, ┤
│ формацию с мыши. Мультиплексор D8   пока не будет произведено  движе- ┤
│ управляется  с шины адреса линией   ние мыши  либо изменено состояние ┤
│ А8 - кнопки/координаты:  при А8=0   ее кнопок.  Выход  по   изменению ┤
│ (#FADF)  опрашиваются кнопки (SB1   состояния  кнопок (а не просто по ┤
│ - ВВОД,  SB2 - ОТМЕНА).  При А8=1   факту их нажатия)  позволяет  ис- ┤
│ подключаются порты координат, ко-   пользовать драйвер  в  программах ┤
│ торые, в свою очередь, выбираются   типа графического  редактора:  Вы ┤
│ линией  А10  (мультиплексоры  D6,   постоянно удерживаете   какую-ни- ┤
│ D7):                                будь кнопку мыши (например, функ- ┤
└───────────────────────────────────────────────────────────────────────┘

                                 - 38 -

┌┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┐
│                   Ч И Т А Т Е Л Ь - Ч И Т А Т Е Л Ю                   ┤
└───────────────────────────────────────────────────────────────────────┘
┌┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┐
│ цию "рисовать")  и выход из драй-      3-я (координата Y):            ┤
│ вера происходит только  когда  Вы         0 - движение по Y вниз;     ┤
│ изменяете положение   мыши.  Если         1 - движение по Y вверх.    ┤
│ такой вариант Вам  не  нужен,  то                                     ┤
│ перед использованием     драйвера      Ячейки 2 и 3 используются  как ┤
│ нужно просто проверить  состояние   счетчики срабатываний    датчиков ┤
│ кнопок и продолжать работу только   мыши по соответствующим координа- ┤
│ если они не нажаты. В своей рабо-   там. Движение  считается произве- ┤
│ те драйвер  использует три распо-   денным, если датчик сработал  оп- ┤
│ ложенных подряд  ячейки   памяти,   ределенное количество раз.  Чувс- ┤
│ которые одновременно  дают инфор-   твительность драйвера можно регу- ┤
│ мацию по выходе из него:            лировать в  пределах 1-126 сраба- ┤
│                                     тываний датчика.                  ┤
│    1-я (состояние кнопок):             Если по  выходе  из драйвера в ┤
│       0 - не нажаты;                ячейках 2 или 3 число не 0  и  не ┤
│       1 - нажата кнопка ВВОД;       1, то значит в данном цикле рабо- ┤
│       2 - нажата кнопка ОТМЕНА;     ты движения по координатам не бы- ┤
│       3 - нажаты обе кнопки.        ло. Перед  самым  первым  вызовом ┤
│    2-я (координата Х):              драйвера в ячейки 2 и  3  следует ┤
│       0 - движение по Х влево;      занести число 128.                ┤
│       1 - движение по Х вправо.        Ниже приведен текст драйвера.  ┤
│ ═════════════════════════════════════════════════════════════════════ ┤
│                                                                       ┤
│       ORG  30000    ;                                                 ┤
│       LD   HL,31000 ;Адрес первой используемой ячейки памяти.         ┤
│       LD   BC,64223 ;В ВС адрес порта состояния кнопок.               ┤
│       IN   A,(C)    ;                                                 ┤
│       CPL           ;Инвертируем полученный байт, потому что нажатой  ┤
│                     ; кнопке соответствует 0, ; а отпущенной - 1.     ┤
│       AND  3        ;Выделяем 2 младших бита.                         ┤
│       LD   (HL),A   ;Запоминаем в 1-й яч. начальное состояние кнопок. ┤
│       LD   BC,64479 ;В ВС адрес порта координаты Х.                   ┤
│       IN   A,(C)    ;                                                 ┤
│       LD   D,A      ;Запоминаем в D текущее состояние порта Х.        ┤
│       LD   BC,65503 ;В ВС адрес порта координаты Y.                   ┤
│       IN   A,(C)    ;                                                 ┤
│       LD   E,A      ;Запоминаем в Е текущее состояние порта Y.        ┤
│       CALL NEW      ;Вызываем подпрограмму начальной установки        ┤
│       CALL NEW      ; ячеек 2 и 3.                                    ┤
│       DEC  HL       ;Возвращаем HL к ячейке 1.                        ┤
│ REP   DEC  HL       ;                                                 ┤
│       LD   BC,64223 ;Повторяем опрос кнопок.                          ┤
│       IN   A,(C)    ;                                                 ┤
│       CPL           ;                                                 ┤
│       AND  3        ;                                                 ┤
│       CP   (HL)     ;Сравниваем новое состояние с запомненным в яч.1. ┤
│       JR   Z,CONT   ;Продолжение работы, если состояние не изменилось.┤
│       LD   (HL),A   ;Иначе - запоминаем новое состояние               ┤
│       RET           ; и возврат.                                      ┤
│ CONT  LD   BC,64479 ;Опрос порта Х.                                   ┤
│       IN   A,(C)    ;                                                 ┤
│       LD   B,D      ;                                                 ┤
│       LD   D,A      ;                                                 ┤
│       CALL MOVE     ;Вызов подпрограммы анализа портов координат; в   ┤
│                     ; В - предыдущее состояние порта, в А - текущее.  ┤
│       LD   BC,65503 ;Опрос порта Y.                                   ┤
│       IN   A,(C)    ;                                                 ┤
└───────────────────────────────────────────────────────────────────────┘

                                 - 39 -

┌┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┐
│                   Ч И Т А Т Е Л Ь - Ч И Т А Т Е Л Ю                   ┤
└───────────────────────────────────────────────────────────────────────┘
┌┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┐
│       LD   B,E      ;                                                 ┤
│       LD   E,A      ;                                                 ┤
│       CALL MOVE     ;                                                 ┤
│       LD   A,(HL)   ;Проверка ячейки 3.                               ┤
│       AND  #FE      ;Отбрасываем 0-й бит.                             ┤
│       RET  Z        ;Возврат, если в ячейке 0 или 1.                  ┤
│       DEC  HL       ;В HL - адрес ячейки 2.                           ┤
│       LD   A,#FE    ;                                                 ┤
│       AND  (HL)     ;                                                 ┤
│       RET  Z        ;Возврат, если в ней 0 или 1.                     ┤
│       JR   REP      ;Повторение цикла опроса состояния мыши.          ┤
│ NEW   INC  HL       ;Подпрограмма начальной установки ячеек 2 и 3;    ┤
│       LD   A,#FE    ; если в ячейке 0 или 1, значит при предыдущем    ┤
│       AND  (HL)     ; вызове драйвера происходило движение по         ┤
│       RET  NZ       ; данной координате и теперь в соответствующую    ┤
│       LD   A,128    ; ячейку нужно занести исходное значение          ┤
│       LD   (HL),A   ; счетчика перемещений - 128.                     ┤
│       RET           ;                                                 ┤
│ MOVE  INC  HL       ;Подпрограмма сравнения текущего (А) и            ┤
│       CP   B        ; предыдущего (В) состояния портов координат.     ┤
│       RET  Z        ;Возврат, если состояние не изменилось.           ┤
│       SUB  B        ;Определяем, увеличилось или уменьшилось          ┤
│                     ; число, читаемое из порта.                       ┤
│       JR   C,SMAL   ;Переход на SMALL, если число уменьшилось.        ┤
│       AND  16       ;Проверяем значение 4-го бита разности.           ┤
│       JR   NZ,MINUS ;Если включен, значит произошло переключение с    ┤
│                     ; 0 на 31 (т.е. число увеличилось, но движение    ┤
│                     ; идет в сторону уменьшения - переход на MINUS.   ┤
│ PLUS  INC  (HL)     ;Увеличиваем значение счетчика.                   ┤
│       LD   A,132    ;Проверяем, достигло ли значение счетчика 132     ┤
│       CP   (HL)     ; (4 срабатывания датчика мыши; изменяя число 132 ┤
│                     ; можно регулировать чувствительность мыши при    ┤
│                     ; увеличении координаты).                         ┤
│       RET  NZ       ;Возврат, если не достигло.                       ┤
│       LD   A,1      ;Иначе - в соответствующую яч. записываем число   ┤
│       LD   (HL),A   ; 1 (произошло движение в сторону увеличения)     ┤
│       RET           ; и возврат.                                      ┤
│ SMAL  CPL           ;Если текущее значение порта меньше предыдущего,  ┤
│                     ; то получим значение разности по модулю          ┤
│       INC  A        ; и действуем аналогично варианту увеличения      ┤
│       AND  16       ; значения порта.                                 ┤
│       JR   NZ,PLUS  ;                                                 ┤
│ MINUS DEC  (HL)     ;                                                 ┤
│       LD   A,124    ;Число 124 - аналогично числу 132 у метки PLUS    ┤
│       CP   (HL)     ; определяет чувствительность при уменьшении      ┤
│       RET  NZ       ; координаты.                                     ┤
│       XOR  A        ;                                                 ┤
│       LD   (HL),A   ;           ╔════════════════════════════════════ ┤
│ ════════════════════════════════╝   ┌─────────────────────────────┐   ┤
│                                     │   334370, Республика Крым,  │   ┤
│    Длина драйвера = 118 байтов.     │ пгт.Раздольное, пр-т 30 лет │   ┤
│                                     │     Победы, д.7, кв.5.      │   ┤
│   Те, у кого появились вопросы по   │      Свечкову Михаилу.      │   ┤
│ предложенному  интерфейсу,  могут   └─────────────────────────────┘   ┤
│ обратиться к автору по следующему                                     ┤
│ адресу:                                      *     *     *            ┤
└───────────────────────────────────────────────────────────────────────┘
